syntax = "proto3";

option go_package =  "github.com/mistercloud/test-todo/goapi";

package goapi;

import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "ToDo";
    version: "1.0.0";
  };
  host: "localhost:8080"
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Todo {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
  };

  rpc AddItem (AddItemRequest) returns (Item) {
    option (google.api.http) = {
      post: "/add",
      body: "*"
      response_body: "*"
    };
  }
  rpc RemoveItem(RemoveItemRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/remove/{id}",
    };
  }
  rpc GetItems(google.protobuf.Empty) returns (ItemList) {
    option (google.api.http) = {
      get: "/list"
      response_body: "*"
    };
  }
}

message Item {
  int32 id = 1;
  string title = 2;
}

message ItemList {
  repeated Item items = 1;
}

message AddItemRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["title"]
    }
    example: "{\"title\": \"test\"}"
  };
  string title = 1;
}

message RemoveItemRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id"]
    }
  };
  int32 id = 1;
}
